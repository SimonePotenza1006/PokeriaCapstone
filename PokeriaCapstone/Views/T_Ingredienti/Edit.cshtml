@model PokeriaCapstone.Models.T_Ingredienti

@{
    ViewBag.Title = "Edit";
}

<section class="mySection d-flex justify-content-center align-items-center flex-column">
    <div class="d-flex justify-content-center align-items-center flex-column">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 class="mt-5">Modifica Ingrediente</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IDIngrediente)

                <div class="form-group mt-2">
                    @Html.LabelFor(model => model.NomeIngrediente, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NomeIngrediente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NomeIngrediente, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-2">
                    @Html.LabelFor(model => model.TipoIngrediente, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TipoIngrediente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TipoIngrediente, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-2">
                    @Html.LabelFor(model => model.PrezzoAggiuntivo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PrezzoAggiuntivo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrezzoAggiuntivo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-2">
                    @Html.LabelFor(model => model.FotoIngrediente, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FotoIngrediente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FotoIngrediente, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 mt-2 d-flex justify-content-center">
                        <input type="submit" value="Salva Modifiche" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
    </div>
    

    <div>
        @Html.ActionLink("Torna alla lista", "ListaIngredienti")
    </div>
</section>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
